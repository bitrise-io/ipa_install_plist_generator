#!/usr/bin/env ruby

require 'optparse'

$:.push File.expand_path("../../lib", __FILE__)
require 'ipa_install_plist_generator'


# -------------------------
# --- Options

options = {
	ipa_download_url: nil,
	bundle_identifier: nil,
	app_title: nil,
	bundle_version: nil,
	display_image: nil,
	full_size_image: nil,
	# utils
	is_verbose: false
}

opt_parser = OptionParser.new do |opt|
	opt.banner = "Usage: ipa_install_plist_generator.rb [OPTIONS]"
	opt.separator  ""
	opt.separator  "Options, the ones marked with * are required"

	opt.on("-i","--ipa IPA_DOWNLOAD_URL", "*IPA download url") do |value|
		options[:ipa_download_url] = value
	end

	opt.on("-b", "--bundle-identifier BUNDLE_ID", "*Metadata: Bundle ID") do |value|
		options[:bundle_identifier] = value
	end

	opt.on("-t", "--app-title APP_TITLE", "*Metadata: App Title") do |value|
		options[:app_title] = value
	end

	opt.on("--bundle-version BUNDLE_VERSION", "Metadata: Bundle Version") do |value|
		options[:bundle_version] = value
	end

	opt.on("--display-image DISPLAY_IMAGE", "Assets: Display Image") do |value|
		options[:display_image] = value
	end

	opt.on("--full-size-image FULL_SIZE_IMAGE", "Assets: Full Size Image") do |value|
		options[:full_size_image] = value
	end

	opt.on("-v","--verbose","Verbose output") do
		options[:is_verbose] = true
	end

	opt.on("-h","--help","Shows this help message") do
		puts opt_parser
		exit 0
	end
end

opt_parser.parse!
$options = options


# -------------------------
# --- Utils

def vputs(msg="")
	if $options[:is_verbose]
		puts msg
	end
end


# -------------------------
# --- Main

vputs "options: #{options}"


raise "No IPA download URL specified" unless options[:ipa_download_url]
raise "No Bundle Identifier specified" unless options[:bundle_identifier]
raise "No App Title specified" unless options[:app_title]

exit_code = 0

plist_string = IpaInstallPlistGenerator::PlistGenerator.new.generate_plist_string(
	options[:ipa_download_url],
	options[:bundle_identifier],
	options[:app_title],
	# optional
	options[:bundle_version],
	options[:display_image],
	options[:full_size_image])

puts plist_string

exit exit_code
